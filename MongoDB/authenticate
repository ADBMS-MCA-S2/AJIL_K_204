> show dbs
admin      0.000GB
candidate  0.000GB
college    0.000GB
company    0.000GB
config     0.000GB
local      0.000GB
student    0.000GB
studentdb  0.000GB
> use college
switched to db college
> show collections
studlist
> show users
> db.createUser({user:"ajil",pwd:"ajil2545",roles:[{role:"readWrite",db:"college"}]})
Successfully added user: {
        "user" : "ajil",
        "roles" : [
                {
                        "role" : "readWrite",
                        "db" : "college"
                }
        ]
}
> show users
{
        "_id" : "college.ajil",
        "userId" : UUID("6551f1d9-f0d8-4be9-ab53-d3212bd9b459"),
        "user" : "ajil",
        "db" : "college",
        "roles" : [
                {
                        "role" : "readWrite",
                        "db" : "college"
                }
        ],
        "mechanisms" : [
                "SCRAM-SHA-1",
                "SCRAM-SHA-256"
        ]
}
> db.authenticate
college.authenticate
> show roles
{
        "role" : "readWrite",
        "db" : "college",
        "isBuiltin" : true,
        "roles" : [ ],
        "inheritedRoles" : [ ]
}
{
        "role" : "dbOwner",
        "db" : "college",
        "isBuiltin" : true,
        "roles" : [ ],
        "inheritedRoles" : [ ]
}
{
        "role" : "enableSharding",
        "db" : "college",
        "isBuiltin" : true,
        "roles" : [ ],
        "inheritedRoles" : [ ]
}
{
        "role" : "userAdmin",
        "db" : "college",
        "isBuiltin" : true,
        "roles" : [ ],
        "inheritedRoles" : [ ]
}
{
        "role" : "read",
        "db" : "college",
        "isBuiltin" : true,
        "roles" : [ ],
        "inheritedRoles" : [ ]
}
{
        "role" : "dbAdmin",
        "db" : "college",
        "isBuiltin" : true,
        "roles" : [ ],
        "inheritedRoles" : [ ]
}
